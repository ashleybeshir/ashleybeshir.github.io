{"version":3,"sources":["webpack:///./src/styles/global.js","webpack:///./src/components/buttons/colorButton/colorButton.js","webpack:///./src/components/buttons/colorButton/colorButton.css.js","webpack:///./src/pages/index.js","webpack:///./src/styles/pages/index.css.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/layout.css.js","webpack:///./src/utils/random.js","webpack:///./src/components/matrix/matrixElements.css.js","webpack:///./src/components/matrix/matrixElements.js","webpack:///./src/components/layout/layout.js"],"names":["ButtonSize","MobileSize","TabletSize","ColorButton","_ref","color","text","onMouseEnter","onClick","react_default","a","createElement","className","css","ButtonBackground","IndexPage","props","_this","_React$Component","call","this","changeColor","state","setState","render","_this2","layout","onMouseLeave","colorButton","console","log","React","Component","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","injectGlobal","Background","styled","target","Random","getRandomRange","min","max","Math","random","getRandomString","possible","i","charAt","floor","length","matrixElements","maxLength","elements","randomNumber","elementPosition","push","matrixElements_css_Background","map","x","key","position","BackgroundPosition","Layout","gatsby_browser_entry","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","matrix_matrixElements","BackgroundFooter","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-7ea7c8e53094a5a0b6d6.js","sourcesContent":["\r\nexport const ButtonSize = {\r\n    ButtonWidth : 190,\r\n    ButtonHeight: 50\r\n};\r\n\r\nexport const MobileSize = {\r\n    MobileWidth: 500\r\n};\r\n\r\nexport const TabletSize = {\r\n    TabletWidth: 800\r\n};\r\n\r\n","import React from 'react'\r\nimport {ButtonBackground} from './colorButton.css';\r\n\r\nconst ColorButton = ({color, text, onMouseEnter, onClick}) => {\r\n    \r\n    return(\r\n        <a onMouseEnter={() => {onMouseEnter(color)}} onClick={onClick}>\r\n            <div className={ButtonBackground(color)}>\r\n                <p>{text}</p>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default ColorButton;","import styled,{css} from 'react-emotion';\r\nimport {ButtonSize} from '../../../styles/global';\r\n\r\nexport const ButtonBackground = (color) => {\r\n    return css`\r\n        border: 1px solid ${color};\r\n        width: ${ButtonSize.ButtonWidth}px;\r\n        height: ${ButtonSize.ButtonHeight}px;\r\n        border-radius: 10px;\r\n\r\n        p {\r\n            color: ${color};\r\n            text-align: center;\r\n        }\r\n    `;\r\n};","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Layout from '../components/layout/layout'\r\nimport {Menu} from '../styles/pages/index.css';\r\nimport ColorButton from '../components/buttons/colorButton/colorButton';\r\n\r\nclass IndexPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {color: 'green'};\r\n  }\r\n\r\n  changeColor = (color) => {\r\n    if(color !== this.state.color)\r\n    {\r\n      this.setState({\r\n        color : color\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return( \r\n      <Layout color={this.state.color}>\r\n        <div className={Menu(this.state.color)} onMouseLeave={()=>{ this.changeColor('green') }}>\r\n          <div>\r\n            <ColorButton color={'yellow'} text={'Button 1'} onMouseEnter={this.changeColor} onClick={ () => {console.log(\"hello\")}} />\r\n            <ColorButton color={'orange'} text={'Button 2'} onMouseEnter={this.changeColor}/>\r\n            <ColorButton color={'white'} text={'Button 3'} onMouseEnter={this.changeColor}/>\r\n          </div>\r\n        </div>\r\n      </Layout>);\r\n  }\r\n}\r\n\r\nexport default IndexPage;\r\n","import styled,{css} from 'react-emotion';\r\nimport {ButtonSize, MobileSize, TabletSize} from '../global';\r\n\r\nexport const Menu = (color) => css`\r\n    z-index: 2;\r\n    width: 20%;\r\n    min-width: 250px;\r\n    border: 2px solid ${color};\r\n    border-radius: 10px;\r\n    background-color: black;\r\n    margin-top: 20vh;\r\n    \r\n     > div{\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: ${ButtonSize.ButtonWidth}px;\r\n    }\r\n    div:first-child{\r\n        margin-top: 20px;\r\n    }\r\n    div:last-child{\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    @media only screen and (max-width: ${TabletSize.TabletWidth}px) {\r\n       \r\n        \r\n    }\r\n\r\n    @media only screen and (max-width: ${MobileSize.MobileWidth}px) {\r\n        \r\n    }\r\n`;\r\n\r\n/*\r\nposition: absolute;\r\n    top: 40%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n\r\n*/ ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled,{css,injectGlobal } from 'react-emotion';\r\n\r\ninjectGlobal`\r\n  body{\r\n    background-attachment: fixed !important;\r\n    background-color: black;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Background = styled('div')`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BackgroundFooter = (color) => css`\r\n  width: 100%;\r\n  height: 50px;\r\n  background: linear-gradient(black 10%, ${color});\r\n  position: fixed;\r\n  bottom: 0;\r\n`;\r\n","export class Random {\r\n\r\n    static getRandomRange(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    static getRandomString(max) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n      \r\n        for (var i = 0; i < max; i++)\r\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n      \r\n        return text;\r\n      }  \r\n}\r\n\r\n","import styled,{css} from 'react-emotion';\r\nimport {Random} from '../../utils/random';\r\n\r\nexport const Background = styled('div')`\r\n    p {\r\n        z-index: -1;\r\n        @keyframes scrolldown {\r\n            from {top: 0%; opacity: 1;}\r\n            to {top: 80%; opacity: 0;}\r\n        }\r\n        @keyframes opacity{\r\n            100% {opacity: 0;}\r\n        }\r\n        animation: scrolldown 3s infinite;\r\n        transform: rotate(90deg); \r\n        position: absolute;\r\n        font-weight: bold;\r\n        text-shadow: 0 0 3px green;\r\n    }\r\n`;\r\n\r\nexport const BackgroundPosition = (position, color) => { \r\n    return css`\r\n        left: ${position}%;\r\n        animation-delay: ${Random.getRandomRange(0,3)}s !important;\r\n        color: ${color};\r\n    `\r\n};","import React from 'react';\r\nimport {Background, BackgroundPosition} from './matrixElements.css';\r\nimport {Random} from '../../utils/random';\r\n\r\nconst matrixElements = ({max, maxLength, color}) => {\r\n    var elements = [];\r\n    for(var i=0; i < max; i++){\r\n        var randomNumber = Random.getRandomRange(4,maxLength);\r\n        var elementPosition = (i * 100 / max);\r\n        var elementPosition = elementPosition > 90 ? Random.getRandomRange(0,90) : elementPosition;\r\n        elements.push([Random.getRandomString(randomNumber),elementPosition]);\r\n    };\r\n    return (\r\n        <Background>\r\n            {\r\n                elements.map((x,i) => \r\n                { return (<p key={i} className={BackgroundPosition(x[1], color)}>{x[0]}</p>)})\r\n            }\r\n        </Background>\r\n    );\r\n}\r\n\r\nexport default matrixElements;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport {Background, BackgroundGradient, BackgroundGradientInject, BackgroundFooter} from './layout.css';\r\nimport MatrixElements from '../matrix/matrixElements';\r\n\r\nconst Layout = ({ children , color }) => {\r\n  return (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            { name: 'description', content: 'ashley site' },\r\n            { name: 'keywords', content: 'ashley, beshir' },\r\n          ]}\r\n        >\r\n          <html lang=\"en\" />\r\n        </Helmet>\r\n        <MatrixElements max={20} maxLength={25} color={color}/>\r\n        <Background>\r\n          {children}\r\n        </Background>\r\n        <div className={BackgroundFooter(color)}/>\r\n      </>\r\n    )}\r\n  />\r\n   ) }\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}